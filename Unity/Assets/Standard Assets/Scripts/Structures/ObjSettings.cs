//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;


namespace AssemblyCSharpfirstpass{


	public class ObjSettings : MonoBehaviour {
		public ObjSettingItem root; //

		public void DoRun(){
			root = (ObjSettingItem) gameObject.AddComponent(typeof(ObjSettingItem));


			try{
				DoInit();
			}
			catch{
				Auto();
				System.IO.File.WriteAllText(StaticMemory.CurrentPreSelectedBuildingPath + "/" +  this.name.Split('.')[0] + ".obSet",root.Export(""));
			}

			root.UpdateSettings();

		}

		public void DoInit(){
			string[] s = System.IO.File.ReadAllText(StaticMemory.CurrentPreSelectedBuildingPath + "/" +  this.name.Split('.')[0] + ".obSet").Split('\n');
			root.Root = root;
			root.Import(s,0,true);

		}	
				
				
		public void Auto(){
			Debug.Log("Do Init " + this.name); 
			int id = 0;

			root.ID = id;
			id++;
			root.ExistingObj = false;
			root.IsActive = true;
			root.Color = Color.white;
			root.Root = root;

			root.Name = this.name;
			string x = "92";

			Debug.Log(transform.childCount);
			foreach(Transform t in transform){
				Debug.Log(t.ToString());

				ObjSettingItem child = (ObjSettingItem) t.GetComponent(typeof(ObjSettingItem));
				child.ID = id;
				id++;

				child.ExistingObj = true;
				child.NameInObjFile = t.name;
				child.IsActive = true;
				child.Color = Color.white;

				//child.Color = new Color (UnityEngine.Random.Range(0f,1f),UnityEngine.Random.Range(0f,1f),UnityEngine.Random.Range(0f,1f));
				
				child.Name = t.name;
				root.ListChild.AddLast(child);
				child.Parent = root;

				string st = t.name.Split('_')[t.name.Split('_').Length -1];
				child.Name = st + "#" + t.name;

				
			}

		}
	}
}

